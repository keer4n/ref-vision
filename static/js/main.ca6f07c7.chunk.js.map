{"version":3,"sources":["serviceWorker.js","Graph.js","index.js"],"names":["Boolean","window","location","hostname","match","d3","d3module","tip","d3tip","Graph","props","state","graphJson","respOk","jsonData","graph","svg","select","width","attr","height","simulation","forceSimulation","force","forceLink","id","d","forceManyBody","strength","forceCenter","link","append","style","selectAll","data","links","enter","tooltip","offset","html","name","node","nodes","call","drag","on","event","active","alphaTarget","restart","fx","x","fy","y","show","hide","label","text","source","target","prevProps","fetch","this","doi","then","resp","status","setState","json","forceUpdate","textAlign","React","Component","ResultItem","handleClick","bind","e","preventDefault","onClicked","onClick","title","author","Result","resultJson","query","searchMode","graphMode","padding","map","r","onResultItemClick","key","SearchBar","handleSubmit","onQueryInput","onSubmit","type","value","onChange","Main","gotQuery","gotResults","gotGraphJson","handleSearchBarSubmit","handleResultItemClick","searchQuery","margin","ReactDOM","render","theme","createTheme","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ca6f07c7.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import './force.css';\nimport * as d3module from 'd3';\nimport React from 'react';\nimport d3tip from 'd3-tip';\nimport {Content} from \"arwes\";\nconst d3 = {\n    ...d3module,\n    tip: d3tip\n}\n\nclass Graph extends React.Component {\n  \n    constructor(props){\n      super(props);\n      this.state = {\n        graphJson : null,\n        respOk : true\n      }\n      \n    }\n\n    graph(jsonData) {\n        var graph = jsonData;\n        var svg = d3.select(\"svg\");\n        \n        var\n            width = +svg.attr(\"width\"),\n            height = +svg.attr(\"height\");\n\n        var simulation = d3.forceSimulation()\n            .force(\"link\", d3.forceLink().id(function(d) { return d.id; }))\n            .force(\"charge\", d3.forceManyBody().strength(-1000))\n            .force(\"center\", d3.forceCenter(width / 2, height / 2));\n\n\n      \n        var link = svg.append(\"g\")\n                        .style(\"stroke\", \"#aaa\")\n                        .selectAll(\"line\")\n                        .data(graph.links)\n                        .enter().append(\"line\");\n        \n        var tooltip = d3.tip()\n                    .attr('class', 'd3-tip')\n                    .offset([-10, 0])\n                    .html(d => {if (!d.name) return \"N/A\"; return d.name});\n\n        var node = svg.append(\"g\")\n                    .attr(\"class\", \"nodes\")\n        .selectAll(\"circle\")\n                    .data(graph.nodes)\n        .enter().append(\"circle\")\n                .attr(\"r\", 20)\n                .call(d3.drag()\n                    .on(\"start\", dragstarted)\n                    .on(\"drag\", dragged)\n                    .on(\"end\", dragended))\n                    .on(\"mouseover\", tooltip.show)\n                    .on(\"mouseout\",tooltip.hide);\n        svg.call(tooltip);\n        \n        var label = svg.append(\"g\")\n            .attr(\"class\", \"labels\")\n            .selectAll(\"text\")\n            .data(graph.nodes)\n            .enter().append(\"text\")\n                .attr(\"class\", \"label\")\n                .text(function(d) { if(!d.label) return \"N/A\"; return d.label; });\n\n        simulation\n            .nodes(graph.nodes)\n            .on(\"tick\", ticked);\n\n        simulation.force(\"link\")\n            .links(graph.links);\n\n        function ticked() {\n            link\n                .attr(\"x1\", function(d) { return d.source.x; })\n                .attr(\"y1\", function(d) { return d.source.y; })\n                .attr(\"x2\", function(d) { return d.target.x; })\n                .attr(\"y2\", function(d) { return d.target.y; });\n\n            node\n                .attr(\"r\", 20)\n                .style(\"fill\", \"#d9d9d9\")\n                .style(\"stroke\", \"#969696\")\n                .style(\"stroke-width\", \"1px\")\n                .attr(\"cx\", function (d) { return d.x+6; })\n                .attr(\"cy\", function(d) { return d.y-6; });\n            \n            label\n                    .attr(\"x\", function(d) { return d.x-8; })\n                    .attr(\"y\", function (d) { return d.y; })\n                    .style(\"font-size\", \"12px\").style(\"fill\", \"#4393c3\");\n        }\n        \n\n        function dragstarted(d) {\n            if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n            d.fx = d.x;\n            d.fy = d.y;\n        }\n        \n        function dragged(d) {\n            d.fx = d3.event.x;\n            d.fy = d3.event.y;\n        }\n        \n        function dragended(d) {\n            if (!d3.event.active) simulation.alphaTarget(0);\n            d.fx = null;\n            d.fy = null;\n        }\n    }\n  \n    componentDidMount(prevProps){\n      \n        \n        fetch(\"https://cors-anywhere.herokuapp.com/https://ref-vision-api.herokuapp.com/api/g?doi=\"+(this.props.doi))\n                        .then(resp => {if (resp.status !== 200) {\n                                            this.setState({\n                                                respOk: false\n                                            });\n                                            } return resp.json()})\n                        .then(data => {this.setState({\n                                        graphJson: data,\n                                        });\n                                        this.forceUpdate(); \n                                        this.graph(this.state.graphJson)   \n                                    });\n\n    }\n  \n  \n    render(){\n      return (\n        <Content style={{textAlign: \"center\"}}>\n            {this.state.respOk ? <svg width=\"960\" height=\"600\"></svg> : <h4 >No reference available.</h4>}\n        \n        {/* <pre>{this.state.graphJson}</pre> */}\n        </Content>\n      )\n    }\n  }\n\nexport default Graph;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport {ThemeProvider, Arwes, createTheme, Content, Frame} from 'arwes';\nimport Heading from 'arwes/lib/Heading';\nimport Graph from './Graph'\n\nclass ResultItem extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.handleClick = this.handleClick.bind(this)\n  }\n  \n  handleClick(e){\n    e.preventDefault()\n    this.props.onClicked(this.props.doi)\n  }\n\n  render(){\n    return (<li onClick={this.handleClick}>\n            {this.props.title}<br/>\n            {this.props.author}\n            </li>)\n  }\n}\n\n\n\nclass Result extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      resultJson : null\n    }\n  }\n    \n    \n\n    componentDidUpdate(prevProps){\n      if(this.props.query !== prevProps.query){\n      fetch(\"https://cors-anywhere.herokuapp.com/https://ref-vision-api.herokuapp.com/api/s?query=\"+this.props.query)\n                  .then(resp => resp.json())\n                  .then(data => this.setState({\n                    resultJson: data,\n                  }));\n    \n      }\n    }\n\n  \n  render() {    \n      \n      if (this.props.searchMode && !this.props.graphMode){\n        if(this.state.resultJson == null){\n          return null\n        } else {\n         return (<Content style={{padding: 100, textAlign: \"left\"}}>\n           <ol>\n                {this.state.resultJson.map(\n               r => <ResultItem onClicked={this.props.onResultItemClick}  key={r.doi} title={r.title} author={r.author} doi={r.doi}/>\n                )}\n             \n           </ol>\n                \n           </Content>)\n        }\n      }\n      else if(this.props.graphMode){\n        return (<Content style={{padding: 10, textAlign: \"left\"}}>\n                  <Graph doi={this.props.doi}></Graph>\n                </Content>\n              )\n      }    \n    \n    \n  }\n}\n\n\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query : \"\"\n    }\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n  \n  handleSubmit(e) {\n    this.props.onQueryInput(this.state.query);\n    e.preventDefault();\n  }\n  \n\n  render(){\n    return (\n          <form onSubmit={this.handleSubmit}>\n            <input \n              type=\"text\"\n              value={this.state.query}\n              onChange={(e) => {this.setState({\n                query : e.target.value\n              })} }/>\n          </form>\n          )\n      }\n}\n\nclass Main extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      query:\"\",\n      gotQuery:false,\n      searchMode: true,\n      graphMode: false,\n      gotResults: false,\n      gotGraphJson: false,\n      resultJson: null,\n      graphJson: null\n    };\n    this.handleSearchBarSubmit = this.handleSearchBarSubmit.bind(this);\n    this.handleResultItemClick = this.handleResultItemClick.bind(this);\n    // this.fetchResults = this.fetchResults.bind(this);\n  }\n\n  \n\n  handleSearchBarSubmit(searchQuery) {\n    this.setState({\n      query : searchQuery,\n      graphMode: false\n    });\n  }\n\n  handleResultItemClick(key) {\n    this.setState({\n      doi : key,\n      graphMode: true\n    })\n  }\n\n  render() {\n    return (\n      <div>\n          <SearchBar \n            onQueryInput={this.handleSearchBarSubmit}/>\n            <Frame style={{margin:\"20px\"}}>\n              <Result \n                query={this.state.query}\n                doi={this.state.doi}\n                searchMode={this.state.searchMode} \n                graphMode={this.state.graphMode}\n                onResultItemClick={this.handleResultItemClick}/>\n            </Frame></div>)\n  }\n}\n\nReactDOM.render(\n  <ThemeProvider theme={createTheme()}>\n        <Arwes>\n          <div style={{textAlign: \"center\"}}>\n          <Heading node='h1'>REF-VISION</Heading>\n          <Main />\n          </div>\n        </Arwes>\n      </ThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}